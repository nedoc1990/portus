.team-details.panel-group ref="details"
  - if can_manage_team?(@team)
    .edit-team-form.collapse
      = form_for @team, remote: true, html: {role: 'form'} do |f|
        .panel.panel-default
          .panel-heading
            .input-group
              = f.text_field(:name,
                             class: 'form-control',
                             placeholder: html_escape(@team.name),
                             required: true,
                             input_html: { tabindex: 1 })
              .input-group-btn
                button.btn.btn-xs.btn-link.edit-team-link type="button"
                  i.fa.fa-close
                  |  Edit team
          .panel-body
            = f.text_area(:description,
                          class: 'form-control',
                          placeholder: html_escape(@team.description),
                          input_html: { tabindex: 2 })
            br
            = button_tag(type: 'submit', class: 'btn btn-primary pull-right') do
              i.fa.fa-check
              |  Save
          .panel-footer
  .panel.panel-default.team_information
    .panel-heading
      .row
        .col-sm-6
          h5
            a[data-placement="right"
              data-toggle="popover"
              data-container=".panel-heading"
              data-content="<p>Information about the team.</p>"
              data-original-title="What's this?"
              tabindex="0" data-html="true"]
                i.fa.fa-info-circle
            strong
              span class="team_name"
                '  #{@team.name}
            |  team description

        .col-sm-6.text-right
          - if can_manage_team?(@team)
            button.btn.btn-link.btn-xs.edit-team-link
              i.fa.fa-pencil
              |  Edit team
    .panel-body
      .description
        - if @team.description.blank?
          p
            'No description has been posted yet.
        - else
          = markdown(@team.description)

      .errors
    .panel-footer

.team-users-wrapper ref="usersPanel"
  - if can_manage_team?(@team)
    #add_team_user_form.collapse
      = form_for :team_user, url: team_users_path, remote: true, html: {id: 'new-team-user-form', class: 'form-horizontal', role: 'form'} do |f|
        = f.hidden_field(:team, value: @team.name)
        .form-group
          = f.label :role, {class: 'control-label col-md-2'}
          .col-md-7
            = f.select(:role, TeamUser.roles.keys.map {|role| [role.titleize,role]}, {}, {class: 'form-control'})
        .form-group
          = f.label :user, {class: 'control-label col-md-2'}
          .col-md-7
            .remote
              = f.text_field(:user, class: 'form-control typeahead', placeholder: 'Name', required: true, data: { team_id: @team.id })
        .form-group
          .col-md-offset-2.col-md-7
            = f.submit('Add', class: 'btn btn-primary')

  .panel.panel-default
    .panel-heading
      .row
        .col-sm-6
          h5
            a[data-placement="right"
              data-toggle="popover"
              data-container=".panel-heading"
              data-content="<p>There are three types of users inside of a team:<br><strong>Viewer:</strong> has read only access. Only pull operations are permitted.<br/><strong>Contributor:</strong> has read and write access. Both pull and push operations are permitted.<br/><strong>Owner:</strong> like 'contributor', but can also manage the team.</p>"
              data-original-title="What's this?"
              tabindex="0" data-html="true"]
              i.fa.fa-info-circle
            '  Members
        .col-sm-6.text-right
          - if can_manage_team?(@team)
            a#add_team_user_btn.btn.btn-xs.btn-link.js-toggle-button role="button"
              i.fa.fa-user-plus
              |  Add members


    .panel-body
      .table-responsive
        table.table.table-striped.table-hover
          colgroup
            - if can_manage_team?(@team)
              col.col-5
              col.col-40
              col.col-35
              col.col-10
              col.col-10
            - else
              col.col-5
              col.col-50
              col.col-45
          thead
            tr
              th
              th User
              th Role
              - if can_manage_team?(@team)
                th Edit
                th Remove
          tbody#team_users
            - @team_users.each do |tu|
              = render(tu)
    .panel-footer= paginate(@team_users, param_name: 'users_page')


<new-namespace-form :state="namespaceState" form-state="newFormVisible" team-name="#{@team.name}"></new-namespace-form>
<namespaces-panel :namespaces="namespaces" :table-sortable="true">
  h5 slot="name"
    a[data-placement="right" data-toggle="popover" data-container=".panel-heading" data-content='<p>A team can own one or more namespaces. By default all the namespaces can be accessed only by the members of the team.</p><p>It is possible to add read only (pull) access to logged-in users or all Portus users by changing the visibility to "protected" or "public" respectively.</p>' data-original-title="What's this?" tabindex="0" data-html="true"]
      i.fa.fa-info-circle
    '  Namespaces owned

  - if can_manage_team?(@team)
    div slot="actions"
      <toggle-link text="Create new namespace" :state="namespaceState" state-key="newFormVisible" class="toggle-link-new-namespace"></toggle-link>
</namespaces-panel>

= render 'namespaces/partials/components_templates'

- content_for :js_header do
  javascript:
    window.teamNamespaces = #{raw @team_namespaces_serialized.to_json};
